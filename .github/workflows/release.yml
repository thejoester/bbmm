name: Release Creation

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Extract Version From Tag
        id: get_version
        uses: battila7/get-version-action@v2

      # NEW: decide URLs based on whether this is a prerelease
      - name: Compute manifest/download URLs
        id: urls
        run: |
          if [ "${{ github.event.release.prerelease }}" = "true" ]; then
            echo "manifest=https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/module.json" >> $GITHUB_OUTPUT
            echo "download=https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/bbmm.zip" >> $GITHUB_OUTPUT
          else
            # Stable builds use /latest/ manifest so users stay on the stable channel
            echo "manifest=https://github.com/${{ github.repository }}/releases/latest/download/module.json" >> $GITHUB_OUTPUT
            echo "download=https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/bbmm.zip" >> $GITHUB_OUTPUT
          fi

      - name: Modify Module Manifest With Release-Specific Values
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: "module.json"
        env:
          version: ${{ steps.get_version.outputs.version-without-v }}
          manifest: ${{ steps.urls.outputs.manifest }}
          download: ${{ steps.urls.outputs.download }}

      - name: Create Module Archive
        run: zip -r bbmm.zip module.json README.md LICENSE.md CHANGELOG.md scripts/ packs/ styles/ lang/

      - uses: release-flow/keep-a-changelog-action@v3
        id: changelog
        with:
          command: query
          version: ${{ steps.get_version.outputs.version-without-v }}

      - name: Update Release With Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          draft: ${{ github.event.release.draft }}
          prerelease: ${{ github.event.release.prerelease }}
          name: ${{ steps.get_version.outputs.version-without-v }}
          body: ${{ steps.changelog.outputs.release-notes }}
          artifacts: |
            module.json
            bbmm.zip

      # Will only run for stable (non-prerelease) â€“ keeps test builds off Foundry
      - name: Publish Module to FoundryVTT Website
        id: publish-to-foundry-website
        if: ${{ ! github.event.release.prerelease }}
        uses: cs96and/FoundryVTT-release-package@v1
        with:
          package-token: ${{ secrets.FOUNDRY_RELEASE_TOKEN }}
          manifest-url: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/module.json
